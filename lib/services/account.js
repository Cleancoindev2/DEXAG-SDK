"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_bignumber=_interopRequireDefault(require("bignumber.js")),_utility=_interopRequireDefault(require("./utility")),account={getERC20Balance:function(){var a=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(b,c,d){var e,f;return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return e=_utility["default"].getTokenContract(b,d),a.next=3,c.getSigner().getAddress();case 3:return f=a.sent,a.abrupt("return",new Promise(function(a){// get balance for token
var c=e.functions.balanceOf(f);c.then(function(c){var d=b.metadata.input.amount;// check if insufficient funds
a(c.gte(d))})["catch"](function(b){console.log(b),a(!1)})}));case 5:case"end":return a.stop();}},a)}));return function getERC20Balance(){return a.apply(this,arguments)}}(),getETHBalance:function(){var a=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(b){var c,d,e,f;return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return c=window.web3.eth.accounts[0],d=_utility["default"].promisify(function(a){return web3.eth.getBalance(c,a)}),a.prev=2,a.next=5,d;case 5:return e=a.sent,f=b.trade.value,a.abrupt("return",e.gte(f));case 10:return a.prev=10,a.t0=a["catch"](2),console.log(a.t0),a.abrupt("return",!1);case 14:case"end":return a.stop();}},a,null,[[2,10]])}));return function getETHBalance(){return a.apply(this,arguments)}}()},_default=account;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2aWNlcy9hY2NvdW50LmpzIl0sIm5hbWVzIjpbImFjY291bnQiLCJnZXRFUkMyMEJhbGFuY2UiLCJ0cmFkZSIsInByb3ZpZGVyIiwic2lnbmVyIiwidG9rZW5Db250cmFjdCIsInV0aWxpdHkiLCJnZXRUb2tlbkNvbnRyYWN0IiwiZ2V0U2lnbmVyIiwiZ2V0QWRkcmVzcyIsImFkZHJlc3MiLCJQcm9taXNlIiwicmVzb2x2ZSIsInByb21pc2UiLCJmdW5jdGlvbnMiLCJiYWxhbmNlT2YiLCJ0aGVuIiwidG9rZW5CYWxhbmNlIiwidG9rZW5BbW91bnQiLCJtZXRhZGF0YSIsImlucHV0IiwiYW1vdW50IiwiZ3RlIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImdldEVUSEJhbGFuY2UiLCJ3aW5kb3ciLCJ3ZWIzIiwiZXRoIiwiYWNjb3VudHMiLCJ3ZWkiLCJwcm9taXNpZnkiLCJjYiIsImdldEJhbGFuY2UiLCJldGhCYWxhbmNlIiwiZXRoQW1vdW50IiwidmFsdWUiXSwibWFwcGluZ3MiOiIrY0FJTUEsT0FBTyxDQUFHLENBQ2RDLGVBQWUsOEZBQUUsV0FBT0MsQ0FBUCxDQUFjQyxDQUFkLENBQXdCQyxDQUF4QixvR0FDVEMsQ0FBQUEsQ0FEUyxDQUNPQyxvQkFBUUMsZ0JBQVIsQ0FBeUJMLENBQXpCLENBQWdDRSxDQUFoQyxDQURQLFVBRU9ELENBQVEsQ0FBQ0ssU0FBVCxHQUFxQkMsVUFBckIsRUFGUCxjQUVUQyxDQUFBQSxDQUZTLDBCQUlSLEdBQUlDLENBQUFBLE9BQUosQ0FBWSxTQUFBQyxDQUFPLENBQUksQ0FDNUI7QUFDQSxHQUFNQyxDQUFBQSxDQUFPLENBQUdSLENBQWEsQ0FBQ1MsU0FBZCxDQUF3QkMsU0FBeEIsQ0FBa0NMLENBQWxDLENBQWhCLENBQ0FHLENBQU8sQ0FBQ0csSUFBUixDQUFhLFNBQVNDLENBQVQsQ0FBdUIsQ0FDbEMsR0FBTUMsQ0FBQUEsQ0FBVyxDQUFHaEIsQ0FBSyxDQUFDaUIsUUFBTixDQUFlQyxLQUFmLENBQXFCQyxNQUF6QyxDQUNBO0FBQ0FULENBQU8sQ0FBQ0ssQ0FBWSxDQUFDSyxHQUFiLENBQWlCSixDQUFqQixDQUFELENBQ1IsQ0FKRCxXQUlTLFNBQVNLLENBQVQsQ0FBYyxDQUNyQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLENBQVosQ0FEcUIsQ0FFckJYLENBQU8sSUFDUixDQVBELENBUUQsQ0FYTSxDQUpRLHlDQUFGLHVFQURELENBa0JkYyxhQUFhLDhGQUFFLFdBQU14QixDQUFOLHdHQUNQUSxDQUFBQSxDQURPLENBQ0dpQixNQUFNLENBQUNDLElBQVAsQ0FBWUMsR0FBWixDQUFnQkMsUUFBaEIsQ0FBeUIsQ0FBekIsQ0FESCxDQUVQQyxDQUZPLENBRUR6QixvQkFBUTBCLFNBQVIsQ0FBa0IsU0FBQUMsQ0FBRSxRQUFJTCxDQUFBQSxJQUFJLENBQUNDLEdBQUwsQ0FBU0ssVUFBVCxDQUFvQnhCLENBQXBCLENBQTZCdUIsQ0FBN0IsQ0FBSixDQUFwQixDQUZDLG1CQUljRixDQUpkLGNBSUxJLENBQUFBLENBSkssUUFLTEMsQ0FMSyxDQUtPbEMsQ0FBSyxDQUFDQSxLQUFOLENBQVltQyxLQUxuQixtQkFNSEYsQ0FBVSxDQUFDYixHQUFYLENBQWVjLENBQWYsQ0FORyw4Q0FRWFosT0FBTyxDQUFDQyxHQUFSLE1BUlcsNkVBQUYscUVBbEJDLEMsVUFnQ0R6QixPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJpZ051bWJlciBmcm9tICdiaWdudW1iZXIuanMnO1xuXG5pbXBvcnQgdXRpbGl0eSBmcm9tICcuL3V0aWxpdHknO1xuXG5jb25zdCBhY2NvdW50ID0ge1xuICBnZXRFUkMyMEJhbGFuY2U6IGFzeW5jICh0cmFkZSwgcHJvdmlkZXIsIHNpZ25lcikgPT4ge1xuICAgIGNvbnN0IHRva2VuQ29udHJhY3QgPSB1dGlsaXR5LmdldFRva2VuQ29udHJhY3QodHJhZGUsIHNpZ25lcik7XG4gICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IHByb3ZpZGVyLmdldFNpZ25lcigpLmdldEFkZHJlc3MoKTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIC8vIGdldCBiYWxhbmNlIGZvciB0b2tlblxuICAgICAgY29uc3QgcHJvbWlzZSA9IHRva2VuQ29udHJhY3QuZnVuY3Rpb25zLmJhbGFuY2VPZihhZGRyZXNzKTtcbiAgICAgIHByb21pc2UudGhlbihmdW5jdGlvbih0b2tlbkJhbGFuY2UpIHtcbiAgICAgICAgY29uc3QgdG9rZW5BbW91bnQgPSB0cmFkZS5tZXRhZGF0YS5pbnB1dC5hbW91bnQ7XG4gICAgICAgIC8vIGNoZWNrIGlmIGluc3VmZmljaWVudCBmdW5kc1xuICAgICAgICByZXNvbHZlKHRva2VuQmFsYW5jZS5ndGUodG9rZW5BbW91bnQpKTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICByZXNvbHZlKGZhbHNlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9LFxuICBnZXRFVEhCYWxhbmNlOiBhc3luYyh0cmFkZSkgPT4ge1xuICAgIGNvbnN0IGFkZHJlc3MgPSB3aW5kb3cud2ViMy5ldGguYWNjb3VudHNbMF07XG4gICAgY29uc3Qgd2VpID0gdXRpbGl0eS5wcm9taXNpZnkoY2IgPT4gd2ViMy5ldGguZ2V0QmFsYW5jZShhZGRyZXNzLCBjYikpO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldGhCYWxhbmNlID0gYXdhaXQgd2VpO1xuICAgICAgY29uc3QgZXRoQW1vdW50ID0gdHJhZGUudHJhZGUudmFsdWU7XG4gICAgICByZXR1cm4gKGV0aEJhbGFuY2UuZ3RlKGV0aEFtb3VudCkpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFjY291bnQ7XG4iXX0=